# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tron.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2  # noqa: F401, E402

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\ntron.proto\x1a\x19google/protobuf/any.proto"M\n\x10TransferContract\x12\x15\n\rowner_address\x18\x01 \x01(\x0c\x12\x12\n\nto_address\x18\x02 \x01(\x0c\x12\x0e\n\x06\x61mount\x18\x03 \x01(\x03"\x95\x01\n\x14TriggerSmartContract\x12\x15\n\rowner_address\x18\x01 \x01(\x0c\x12\x18\n\x10\x63ontract_address\x18\x02 \x01(\x0c\x12\x12\n\ncall_value\x18\x03 \x01(\x03\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c\x12\x18\n\x10\x63\x61ll_token_value\x18\x05 \x01(\x03\x12\x10\n\x08token_id\x18\x06 \x01(\x03"*\n\tAccountId\x12\x0c\n\x04name\x18\x01 \x01(\x0c\x12\x0f\n\x07\x61\x64\x64ress\x18\x02 \x01(\x0c"A\n\tauthority\x12\x1b\n\x07\x61\x63\x63ount\x18\x01 \x01(\x0b\x32\n.AccountId\x12\x17\n\x0fpermission_name\x18\x02 \x01(\x0c"r\n\x11MarketOrderDetail\x12\x14\n\x0cmakerOrderId\x18\x01 \x01(\x0c\x12\x14\n\x0ctakerOrderId\x18\x02 \x01(\x0c\x12\x18\n\x10\x66illSellQuantity\x18\x03 \x01(\x03\x12\x17\n\x0f\x66illBuyQuantity\x18\x04 \x01(\x03"\xc3\x14\n\x0bTransaction\x12"\n\x08raw_data\x18\x01 \x01(\x0b\x32\x10.Transaction.raw\x12\x11\n\tsignature\x18\x02 \x03(\x0c\x12 \n\x03ret\x18\x05 \x03(\x0b\x32\x13.Transaction.Result\x1a\xaf\n\n\x08\x43ontract\x12\x30\n\x04type\x18\x01 \x01(\x0e\x32".Transaction.Contract.ContractType\x12\'\n\tparameter\x18\x02 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x10\n\x08provider\x18\x03 \x01(\x0c\x12\x14\n\x0c\x43ontractName\x18\x04 \x01(\x0c\x12\x15\n\rPermission_id\x18\x05 \x01(\x05"\x88\t\n\x0c\x43ontractType\x12\x19\n\x15\x41\x63\x63ountCreateContract\x10\x00\x12\x14\n\x10TransferContract\x10\x01\x12\x19\n\x15TransferAssetContract\x10\x02\x12\x15\n\x11VoteAssetContract\x10\x03\x12\x17\n\x13VoteWitnessContract\x10\x04\x12\x19\n\x15WitnessCreateContract\x10\x05\x12\x16\n\x12\x41ssetIssueContract\x10\x06\x12\x19\n\x15WitnessUpdateContract\x10\x08\x12!\n\x1dParticipateAssetIssueContract\x10\t\x12\x19\n\x15\x41\x63\x63ountUpdateContract\x10\n\x12\x19\n\x15\x46reezeBalanceContract\x10\x0b\x12\x1b\n\x17UnfreezeBalanceContract\x10\x0c\x12\x1b\n\x17WithdrawBalanceContract\x10\r\x12\x19\n\x15UnfreezeAssetContract\x10\x0e\x12\x17\n\x13UpdateAssetContract\x10\x0f\x12\x1a\n\x16ProposalCreateContract\x10\x10\x12\x1b\n\x17ProposalApproveContract\x10\x11\x12\x1a\n\x16ProposalDeleteContract\x10\x12\x12\x18\n\x14SetAccountIdContract\x10\x13\x12\x12\n\x0e\x43ustomContract\x10\x14\x12\x17\n\x13\x43reateSmartContract\x10\x1e\x12\x18\n\x14TriggerSmartContract\x10\x1f\x12\x0f\n\x0bGetContract\x10 \x12\x19\n\x15UpdateSettingContract\x10!\x12\x1a\n\x16\x45xchangeCreateContract\x10)\x12\x1a\n\x16\x45xchangeInjectContract\x10*\x12\x1c\n\x18\x45xchangeWithdrawContract\x10+\x12\x1f\n\x1b\x45xchangeTransactionContract\x10,\x12\x1d\n\x19UpdateEnergyLimitContract\x10-\x12#\n\x1f\x41\x63\x63ountPermissionUpdateContract\x10.\x12\x14\n\x10\x43learABIContract\x10\x30\x12\x1b\n\x17UpdateBrokerageContract\x10\x31\x12\x1c\n\x18ShieldedTransferContract\x10\x33\x12\x1b\n\x17MarketSellAssetContract\x10\x34\x12\x1d\n\x19MarketCancelOrderContract\x10\x35\x12\x1b\n\x17\x46reezeBalanceV2Contract\x10\x36\x12\x1d\n\x19UnfreezeBalanceV2Contract\x10\x37\x12"\n\x1eWithdrawExpireUnfreezeContract\x10\x38\x12\x1c\n\x18\x44\x65legateResourceContract\x10\x39\x12\x1e\n\x1aUnDelegateResourceContract\x10:\x12\x1f\n\x1b\x43\x61ncelAllUnfreezeV2Contract\x10;\x1a\xbb\x07\n\x06Result\x12\x0b\n\x03\x66\x65\x65\x18\x01 \x01(\x03\x12%\n\x03ret\x18\x02 \x01(\x0e\x32\x18.Transaction.Result.code\x12\x37\n\x0b\x63ontractRet\x18\x03 \x01(\x0e\x32".Transaction.Result.contractResult\x12\x14\n\x0c\x61ssetIssueID\x18\x0e \x01(\t\x12\x17\n\x0fwithdraw_amount\x18\x0f \x01(\x03\x12\x17\n\x0funfreeze_amount\x18\x10 \x01(\x03\x12 \n\x18\x65xchange_received_amount\x18\x12 \x01(\x03\x12&\n\x1e\x65xchange_inject_another_amount\x18\x13 \x01(\x03\x12(\n exchange_withdraw_another_amount\x18\x14 \x01(\x03\x12\x13\n\x0b\x65xchange_id\x18\x15 \x01(\x03\x12 \n\x18shielded_transaction_fee\x18\x16 \x01(\x03\x12\x0f\n\x07orderId\x18\x19 \x01(\x0c\x12(\n\x0corderDetails\x18\x1a \x03(\x0b\x32\x12.MarketOrderDetail\x12\x1e\n\x16withdraw_expire_amount\x18\x1b \x01(\x03\x12Q\n\x18\x63\x61ncel_unfreezeV2_amount\x18\x1c \x03(\x0b\x32/.Transaction.Result.CancelUnfreezeV2AmountEntry\x1a=\n\x1b\x43\x61ncelUnfreezeV2AmountEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01"\x1e\n\x04\x63ode\x12\n\n\x06SUCESS\x10\x00\x12\n\n\x06\x46\x41ILED\x10\x01"\xc3\x02\n\x0e\x63ontractResult\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\n\n\x06REVERT\x10\x02\x12\x18\n\x14\x42\x41\x44_JUMP_DESTINATION\x10\x03\x12\x11\n\rOUT_OF_MEMORY\x10\x04\x12\x18\n\x14PRECOMPILED_CONTRACT\x10\x05\x12\x13\n\x0fSTACK_TOO_SMALL\x10\x06\x12\x13\n\x0fSTACK_TOO_LARGE\x10\x07\x12\x15\n\x11ILLEGAL_OPERATION\x10\x08\x12\x12\n\x0eSTACK_OVERFLOW\x10\t\x12\x11\n\rOUT_OF_ENERGY\x10\n\x12\x0f\n\x0bOUT_OF_TIME\x10\x0b\x12\x17\n\x13JVM_STACK_OVER_FLOW\x10\x0c\x12\x0b\n\x07UNKNOWN\x10\r\x12\x13\n\x0fTRANSFER_FAILED\x10\x0e\x12\x10\n\x0cINVALID_CODE\x10\x0f\x1a\xea\x01\n\x03raw\x12\x17\n\x0fref_block_bytes\x18\x01 \x01(\x0c\x12\x15\n\rref_block_num\x18\x03 \x01(\x03\x12\x16\n\x0eref_block_hash\x18\x04 \x01(\x0c\x12\x12\n\nexpiration\x18\x08 \x01(\x03\x12\x19\n\x05\x61uths\x18\t \x03(\x0b\x32\n.authority\x12\x0c\n\x04\x64\x61ta\x18\n \x01(\x0c\x12\'\n\x08\x63ontract\x18\x0b \x03(\x0b\x32\x15.Transaction.Contract\x12\x0f\n\x07scripts\x18\x0c \x01(\x0c\x12\x11\n\ttimestamp\x18\x0e \x01(\x03\x12\x11\n\tfee_limit\x18\x12 \x01(\x03\x62\x06proto3'  # noqa: E501
)

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, "tron_pb2", _globals)
if _descriptor._USE_C_DESCRIPTORS == False:  # noqa: E712
    DESCRIPTOR._options = None
    _globals["_TRANSACTION_RESULT_CANCELUNFREEZEV2AMOUNTENTRY"]._options = None
    _globals["_TRANSACTION_RESULT_CANCELUNFREEZEV2AMOUNTENTRY"]._serialized_options = b"8\001"
    _globals["_TRANSFERCONTRACT"]._serialized_start = 41
    _globals["_TRANSFERCONTRACT"]._serialized_end = 118
    _globals["_TRIGGERSMARTCONTRACT"]._serialized_start = 121
    _globals["_TRIGGERSMARTCONTRACT"]._serialized_end = 270
    _globals["_ACCOUNTID"]._serialized_start = 272
    _globals["_ACCOUNTID"]._serialized_end = 314
    _globals["_AUTHORITY"]._serialized_start = 316
    _globals["_AUTHORITY"]._serialized_end = 381
    _globals["_MARKETORDERDETAIL"]._serialized_start = 383
    _globals["_MARKETORDERDETAIL"]._serialized_end = 497
    _globals["_TRANSACTION"]._serialized_start = 500
    _globals["_TRANSACTION"]._serialized_end = 3127
    _globals["_TRANSACTION_CONTRACT"]._serialized_start = 605
    _globals["_TRANSACTION_CONTRACT"]._serialized_end = 1932
    _globals["_TRANSACTION_CONTRACT_CONTRACTTYPE"]._serialized_start = 772
    _globals["_TRANSACTION_CONTRACT_CONTRACTTYPE"]._serialized_end = 1932
    _globals["_TRANSACTION_RESULT"]._serialized_start = 1935
    _globals["_TRANSACTION_RESULT"]._serialized_end = 2890
    _globals["_TRANSACTION_RESULT_CANCELUNFREEZEV2AMOUNTENTRY"]._serialized_start = 2471
    _globals["_TRANSACTION_RESULT_CANCELUNFREEZEV2AMOUNTENTRY"]._serialized_end = 2532
    _globals["_TRANSACTION_RESULT_CODE"]._serialized_start = 2534
    _globals["_TRANSACTION_RESULT_CODE"]._serialized_end = 2564
    _globals["_TRANSACTION_RESULT_CONTRACTRESULT"]._serialized_start = 2567
    _globals["_TRANSACTION_RESULT_CONTRACTRESULT"]._serialized_end = 2890
    _globals["_TRANSACTION_RAW"]._serialized_start = 2893
    _globals["_TRANSACTION_RAW"]._serialized_end = 3127
# @@protoc_insertion_point(module_scope)
